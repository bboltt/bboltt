Slide 1 – Why & What
Project goal

Identify consumer households that are most likely to convert to Private Wealth Management (PWM) within the next 6 months

Provide an interpretable “why‑selected” reason for every prospect

Core technology choices

Monthly feature refresh — Random‑Forest importance → top N columns

Min‑Max scaling & K‑Means on current PWM clients → multiple “PWM archetype” clusters

Distance radius per cluster = farthest PWM in that group (no hard similarity threshold)

Prospect assignment — consumer inside ≥1 cluster radius ⇒ becomes a lead

Cluster explanation — “1‑vs‑all” model on each cluster surfaces its 5‑8 hallmark features

Performance check — capture‑rate = % of real 6‑month PWM conversions caught by the leads list (80 %+ in recent runs)

Key benefits

Automatic drift resistance: feature list updates every run

Distance filter prevents over‑tight clustering → larger, yet still relevant, lead pool

Cluster‑specific top‑features give instant business context (not raw numbers)

Slide 2 – End‑to‑End Workflow
Data ingest

50 + candidate features per household (balances, products, transactions, demographics)

Feature selection (monthly)

Spark RF ⇒ rank columns ⇒ store top N in selected_features table

PWM clustering (Python / scikit‑learn)

Min‑Max scaler → K‑Means (k≈10) on PWM rows

Record cluster centers & max Euclidean radius

Prospect scoring (Spark)

Scale consumer rows with same min/max

Measure distance to every centroid

Keep row if distance ≤ cluster radius

Output: prospects_all (hh_id, cluster_id, distance)

Cluster insight extraction

For each cluster: 1‑vs‑all RF ⇒ top hallmark features

Map raw names → business‑friendly terms

Insight text: “Selected because of AUM dollars, multiple investment products, …”

Evaluation loop

Six‑month look‑ahead → real PWM conversions

Compute capture‑rate; monitor monthly (target ≥ 80 %)

Artifacts delivered

Prospects table + insight column

Monthly dashboard of capture‑rate & feature drift indicators
