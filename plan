Hi everyone. Today I’ll introduce our Private Wealth prospecting engine, which aims to identify consumer households most likely to become PWM clients within six months. To do that, we leverage the core insight that households who look like our existing PWM clients tend to convert.

Importantly, we did not build a traditional classification model—there simply aren’t enough positives (hundreds of conversions against 5 million+ consumers) to train reliably. Instead, we chose an unsupervised clustering approach: we group today’s PWM clients into archetypes, then flag any consumer whose profile falls into one of those archetype patterns as a prospect.

We draw on 50+ customer features—from balances and product mix to transaction counts and tenure—refreshing our top-feature list each month so we stay adaptive and avoid stale signals.

For evaluation, we define a valid conversion as any consumer who has no PWM relationship at the score date but does open a PWM relationship within six months. Our capture-rate is simply the share of those true conversions that were already flagged as prospects. In recent runs, we’ve consistently captured 80 percent or more of the real converts—showing our clustering approach effectively zeros in on households with genuine PWM potential.



%%{ init: { "themeVariables": { "fontSize": "10pm 8px" } } }%%
flowchart
    B["Cluster existing PWM<br/>into 30 groups"]
    B --> F
    
    D["All consumer population"]
    D --> F{"Similar?"}
    F -- Yes --> G["Flag as PWM prospect"]
    F -- No  --> H["Not a prospect"]




%%{ init: { 
      "themeVariables": { "fontSize": "30px" },
      "flowchart":      { "nodeSpacing": 60, "rankSpacing": 90 }
} }%%
flowchart LR
    A["Monthly data feed<br/>(customer features)"] --> B["Random-Forest<br/>selects top 30 features"]
    B --> C["Group existing PWM<br/>with K-Means clusters"]
    C --> D["Define cluster radius<br/>(farthest PWM)"]
    B --> E["Consumer universe<br/>(non-PWM)"]
    E --> F["Measure distance to<br/>each cluster center"]
    F --> G{"Inside any<br/>cluster radius?"}
    G -- "No" --> H["Discard"]
    G -- "Yes" --> I["Prospect list"]
    C --> J["1-vs-all model<br/>per cluster"]
    J --> K["Key features (top 5) that<br/>define each cluster"]
    K --> L["Plain-language<br/>insight"]
    I --> L
    I --> M["6-month look-ahead:<br/>actual PWM conversions"]
    M --> N["Capture-rate"]




Slide 1 – Why & What
Project goal

Identify consumer households that are most likely to convert to Private Wealth Management (PWM) within the next 6 months

Provide an interpretable “why‑selected” reason for every prospect

Core technology choices

Monthly feature refresh — Random‑Forest importance → top N columns

Min‑Max scaling & K‑Means on current PWM clients → multiple “PWM archetype” clusters

Distance radius per cluster = farthest PWM in that group (no hard similarity threshold)

Prospect assignment — consumer inside ≥1 cluster radius ⇒ becomes a lead

Cluster explanation — “1‑vs‑all” model on each cluster surfaces its 5‑8 hallmark features

Performance check — capture‑rate = % of real 6‑month PWM conversions caught by the leads list (80 %+ in recent runs)

Key benefits

Automatic drift resistance: feature list updates every run

Distance filter prevents over‑tight clustering → larger, yet still relevant, lead pool

Cluster‑specific top‑features give instant business context (not raw numbers)

Slide 2 – End‑to‑End Workflow
Data ingest

50 + candidate features per household (balances, products, transactions, demographics)

Feature selection (monthly)

Spark RF ⇒ rank columns ⇒ store top N in selected_features table

PWM clustering (Python / scikit‑learn)

Min‑Max scaler → K‑Means (k≈10) on PWM rows

Record cluster centers & max Euclidean radius

Prospect scoring (Spark)

Scale consumer rows with same min/max

Measure distance to every centroid

Keep row if distance ≤ cluster radius

Output: prospects_all (hh_id, cluster_id, distance)

Cluster insight extraction

For each cluster: 1‑vs‑all RF ⇒ top hallmark features

Map raw names → business‑friendly terms

Insight text: “Selected because of AUM dollars, multiple investment products, …”

Evaluation loop

Six‑month look‑ahead → real PWM conversions

Compute capture‑rate; monitor monthly (target ≥ 80 %)

Artifacts delivered

Prospects table + insight column

Monthly dashboard of capture‑rate & feature drift indicators
