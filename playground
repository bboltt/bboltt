from pyspark.sql.functions import col, weekofyear, year, count, sum, expr
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Set a consistent style for the plots
sns.set_style("whitegrid")
plt.rcParams.update({"font.size": 12})

# Step 1: Add year-week column to the data
master_table = master_table.withColumn("year_week", expr("concat(year(date), '-', weekofyear(date))"))

# Step 2: Aggregate data to weekly level
weekly_summary = master_table.groupBy("year_week").agg(
    count("*").alias("transaction_count"),
    sum(col("label")).alias("fraud_count")  # Sum of label=1 gives fraud count
)

# Calculate fraud rate
weekly_summary = weekly_summary.withColumn(
    "fraud_rate", (col("fraud_count") / col("transaction_count")) * 100
)

# Step 3: Split data into training and test
train_data = weekly_summary.filter((col("date") >= train_start_date) & (col("date") <= train_end_date))
test_data = weekly_summary.filter((col("date") >= test_start_date) & (col("date") <= test_end_date))

# Step 4: Convert to Pandas for visualization
train_df = train_data.toPandas()
test_df = test_data.toPandas()

# Step 5: Enhanced Visualization
fig, axes = plt.subplots(3, 1, figsize=(16, 12), sharex=True)

# Plot 1: Transaction Count
sns.lineplot(data=train_df, x="year_week", y="transaction_count", label="Train Transactions", marker="o", ax=axes[0])
sns.lineplot(data=test_df, x="year_week", y="transaction_count", label="Test Transactions", marker="o", ax=axes[0])
axes[0].set_title("Weekly Transaction Count")
axes[0].set_ylabel("Transaction Count")
axes[0].legend()
axes[0].tick_params(axis="x", rotation=45)

# Plot 2: Fraud Count
sns.lineplot(data=train_df, x="year_week", y="fraud_count", label="Train Fraud Count", marker="o", ax=axes[1])
sns.lineplot(data=test_df, x="year_week", y="fraud_count", label="Test Fraud Count", marker="o", ax=axes[1])
axes[1].set_title("Weekly Fraud Count")
axes[1].set_ylabel("Fraud Count")
axes[1].legend()
axes[1].tick_params(axis="x", rotation=45)

# Plot 3: Fraud Rate
sns.lineplot(data=train_df, x="year_week", y="fraud_rate", label="Train Fraud Rate", marker="o", ax=axes[2])
sns.lineplot(data=test_df, x="year_week", y="fraud_rate", label="Test Fraud Rate", marker="o", ax=axes[2])
axes[2].set_title("Weekly Fraud Rate (%)")
axes[2].set_ylabel("Fraud Rate (%)")
axes[2].legend()
axes[2].tick_params(axis="x", rotation=45)

# Add a common x-label
plt.xlabel("Year-Week", fontsize=14)
plt.tight_layout()
plt.show()




